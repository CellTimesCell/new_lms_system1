{"ast":null,"code":"import axios from 'axios';\n\n// Create API service\nconst api = {\n  // Courses\n  getCourses: async () => {\n    const response = await axios.get('/api/v1/courses');\n    return response.data;\n  },\n  getCourseById: async courseId => {\n    const response = await axios.get(`/api/v1/courses/${courseId}`);\n    return response.data;\n  },\n  // Modules\n  getModuleContent: async moduleId => {\n    const response = await axios.get(`/api/v1/modules/${moduleId}/content`);\n    return response.data;\n  },\n  // User profile\n  getUserProfile: async () => {\n    const response = await axios.get('/api/v1/users/me');\n    return response.data;\n  },\n  // Enrollment\n  enrollInCourse: async courseId => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const enrollment = {\n      student_id: user.id,\n      course_id: courseId\n    };\n    const response = await axios.post('/api/v1/courses/enroll', enrollment);\n    return response.data;\n  },\n  getMyEnrollments: async () => {\n    const response = await axios.get('/api/v1/courses/enrollments/me');\n    return response.data;\n  }\n};\n\n// Request interceptor for handling errors\naxios.interceptors.response.use(response => response, error => {\n  // Handle unauthorized errors (401)\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","getCourses","response","get","data","getCourseById","courseId","getModuleContent","moduleId","getUserProfile","enrollInCourse","user","JSON","parse","localStorage","getItem","enrollment","student_id","id","course_id","post","getMyEnrollments","interceptors","use","error","status","removeItem","window","location","href","Promise","reject"],"sources":["C:/Users/LocoTrashPanda/PycharmProjects/new_lms_system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create API service\r\nconst api = {\r\n  // Courses\r\n  getCourses: async () => {\r\n    const response = await axios.get('/api/v1/courses');\r\n    return response.data;\r\n  },\r\n\r\n  getCourseById: async (courseId) => {\r\n    const response = await axios.get(`/api/v1/courses/${courseId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Modules\r\n  getModuleContent: async (moduleId) => {\r\n    const response = await axios.get(`/api/v1/modules/${moduleId}/content`);\r\n    return response.data;\r\n  },\r\n\r\n  // User profile\r\n  getUserProfile: async () => {\r\n    const response = await axios.get('/api/v1/users/me');\r\n    return response.data;\r\n  },\r\n\r\n  // Enrollment\r\n  enrollInCourse: async (courseId) => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const enrollment = {\r\n      student_id: user.id,\r\n      course_id: courseId\r\n    };\r\n\r\n    const response = await axios.post('/api/v1/courses/enroll', enrollment);\r\n    return response.data;\r\n  },\r\n\r\n  getMyEnrollments: async () => {\r\n    const response = await axios.get('/api/v1/courses/enrollments/me');\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Request interceptor for handling errors\r\naxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    // Handle unauthorized errors (401)\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAG;EACV;EACAC,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,iBAAiB,CAAC;IACnD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,aAAa,EAAE,MAAOC,QAAQ,IAAK;IACjC,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,mBAAmBG,QAAQ,EAAE,CAAC;IAC/D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,gBAAgB,EAAE,MAAOC,QAAQ,IAAK;IACpC,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,mBAAmBK,QAAQ,UAAU,CAAC;IACvE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAK,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,kBAAkB,CAAC;IACpD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAM,cAAc,EAAE,MAAOJ,QAAQ,IAAK;IAClC,MAAMK,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,MAAMC,UAAU,GAAG;MACjBC,UAAU,EAAEN,IAAI,CAACO,EAAE;MACnBC,SAAS,EAAEb;IACb,CAAC;IAED,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACqB,IAAI,CAAC,wBAAwB,EAAEJ,UAAU,CAAC;IACvE,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDiB,gBAAgB,EAAE,MAAAA,CAAA,KAAY;IAC5B,MAAMnB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,gCAAgC,CAAC;IAClE,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;;AAED;AACAL,KAAK,CAACuB,YAAY,CAACpB,QAAQ,CAACqB,GAAG,CAC7BrB,QAAQ,IAAIA,QAAQ,EACpBsB,KAAK,IAAI;EACP;EACA,IAAIA,KAAK,CAACtB,QAAQ,IAAIsB,KAAK,CAACtB,QAAQ,CAACuB,MAAM,KAAK,GAAG,EAAE;IACnDX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCZ,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}