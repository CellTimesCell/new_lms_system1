{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LocoTrashPanda\\\\PycharmProjects\\\\new_lms_system\\\\frontend\\\\src\\\\components\\\\dashboard\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentDashboard({\n  profile\n}) {\n  _s();\n  const [enrolledCourses, setEnrolledCourses] = useState([]);\n  const [availableCourses, setAvailableCourses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // Get enrolled courses\n        const enrollments = await api.getMyEnrollments();\n\n        // Get all published courses\n        const courses = await api.getCourses();\n\n        // Filter enrolled courses\n        const enrolledCourseIds = enrollments.map(e => e.course_id);\n        const enrolled = courses.filter(course => enrolledCourseIds.includes(course.id));\n\n        // Filter available courses (not yet enrolled)\n        const available = courses.filter(course => course.is_published && !enrolledCourseIds.includes(course.id));\n        setEnrolledCourses(enrolled);\n        setAvailableCourses(available);\n      } catch (err) {\n        setError('Failed to load courses');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"My Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), enrolledCourses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"You are not enrolled in any courses yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: enrolledCourses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold mb-2\",\n              children: course.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 mb-4\",\n              children: course.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/courses/${course.id}`,\n              className: \"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded\",\n              children: \"Go to Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, course.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Available Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), availableCourses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No other courses are available at this time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: availableCourses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold mb-2\",\n              children: course.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 mb-4\",\n              children: course.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => api.enrollInCourse(course.id).then(() => {\n                // Update course lists after enrollment\n                setEnrolledCourses([...enrolledCourses, course]);\n                setAvailableCourses(availableCourses.filter(c => c.id !== course.id));\n              }).catch(err => {\n                setError('Failed to enroll in course');\n                console.error(err);\n              }),\n              className: \"bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded\",\n              children: \"Enroll Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, course.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentDashboard, \"eU4usfDYmcz917CuYtslpRLqwTo=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","api","jsxDEV","_jsxDEV","StudentDashboard","profile","_s","enrolledCourses","setEnrolledCourses","availableCourses","setAvailableCourses","loading","setLoading","error","setError","fetchData","enrollments","getMyEnrollments","courses","getCourses","enrolledCourseIds","map","e","course_id","enrolled","filter","course","includes","id","available","is_published","err","console","className","fileName","_jsxFileName","lineNumber","columnNumber","children","length","title","description","to","onClick","enrollInCourse","then","c","catch","_c","$RefreshReg$"],"sources":["C:/Users/LocoTrashPanda/PycharmProjects/new_lms_system/frontend/src/components/dashboard/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../../services/api';\r\n\r\nfunction StudentDashboard({ profile }) {\r\n  const [enrolledCourses, setEnrolledCourses] = useState([]);\r\n  const [availableCourses, setAvailableCourses] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        // Get enrolled courses\r\n        const enrollments = await api.getMyEnrollments();\r\n\r\n        // Get all published courses\r\n        const courses = await api.getCourses();\r\n\r\n        // Filter enrolled courses\r\n        const enrolledCourseIds = enrollments.map(e => e.course_id);\r\n        const enrolled = courses.filter(course => enrolledCourseIds.includes(course.id));\r\n\r\n        // Filter available courses (not yet enrolled)\r\n        const available = courses.filter(course =>\r\n          course.is_published && !enrolledCourseIds.includes(course.id)\r\n        );\r\n\r\n        setEnrolledCourses(enrolled);\r\n        setAvailableCourses(available);\r\n      } catch (err) {\r\n        setError('Failed to load courses');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"spinner\"></div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"mb-10\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">My Courses</h2>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {enrolledCourses.length === 0 ? (\r\n          <p className=\"text-gray-500\">You are not enrolled in any courses yet.</p>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {enrolledCourses.map(course => (\r\n              <div key={course.id} className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n                <div className=\"p-4\">\r\n                  <h3 className=\"text-xl font-semibold mb-2\">{course.title}</h3>\r\n                  <p className=\"text-gray-600 mb-4\">{course.description}</p>\r\n                  <Link\r\n                    to={`/courses/${course.id}`}\r\n                    className=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded\"\r\n                  >\r\n                    Go to Course\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n      <section>\r\n        <h2 className=\"text-2xl font-bold mb-4\">Available Courses</h2>\r\n\r\n        {availableCourses.length === 0 ? (\r\n          <p className=\"text-gray-500\">No other courses are available at this time.</p>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {availableCourses.map(course => (\r\n              <div key={course.id} className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n                <div className=\"p-4\">\r\n                  <h3 className=\"text-xl font-semibold mb-2\">{course.title}</h3>\r\n                  <p className=\"text-gray-600 mb-4\">{course.description}</p>\r\n                  <button\r\n                    onClick={() => api.enrollInCourse(course.id)\r\n                      .then(() => {\r\n                        // Update course lists after enrollment\r\n                        setEnrolledCourses([...enrolledCourses, course]);\r\n                        setAvailableCourses(availableCourses.filter(c => c.id !== course.id));\r\n                      })\r\n                      .catch(err => {\r\n                        setError('Failed to enroll in course');\r\n                        console.error(err);\r\n                      })\r\n                    }\r\n                    className=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded\"\r\n                  >\r\n                    Enroll Now\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}